{
  "Unit Test Describe with it": {
		"prefix": "det",
		"body": [
			"describe ('$1', () => {",
    		"\tit('$2', () => {",
            "\t\t$3",
    		"\t});",
			"});"
		],
		"description": "Describe with it"
	},
  "Unit Test Describe without it": {
		"prefix": "deb",
		"body": [
			"describe ('$1', () => {",
          "\t$2",
			"});"
		],
		"description": "Describe without it"
	},
  "Unit Test it": {
		"prefix": "dit",
		"body": [
			"it ('$1', () => {",
          "\t$2",
			"});"
		],
		"description": "Unit Test it"
	},
  "Expect toExist": {
    "prefix": "ete",
    "body": "expect(${object}).toExist($1);$0",
    "description": "Expect toExist"
  },
  "Expect toNotExist": {
    "prefix": "ene",
    "body": "expect(${object}).toNotExist($1);$0",
    "description": "Expect toNotExist"
  },
  "Expect toBe": {
    "prefix": "etb",
    "body": "expect(${object}).toBe($1);$0",
    "description": "Expect toBe"
  },
  "toNotBe": {
    "prefix": "enb",
    "body": "expect(${object}).toNotBe($1);$0",
    "description": "Expect toBe"
  },
  "Expect toEqual": {
    "prefix": "etq",
    "body": "expect(${object}).toEqual($1);$0",
    "description": "Expect toEqual"
  },
  "Expect toNotEqual": {
    "prefix": "enq",
    "body": "expect(${object}).toNotEqual($1);$0",
    "description": "Expect toEqtoNotEqualual"
  }
}